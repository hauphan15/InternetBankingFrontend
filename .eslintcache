[{"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\index.js":"1","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\App.js":"2","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\serviceWorker.js":"3","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\app\\store.js":"4","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\create-account.js":"5","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\auth\\authSlice.js":"6","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\employeeSlice.js":"7","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\customerSlice.js":"8","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\admin\\adminSlice.js":"9","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\header\\headerSlice.js":"10","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\counter\\counterSlice.js":"11","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\auth\\Login.jsx":"12","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\auth\\PrivateRoute.jsx":"13","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\HomePage.jsx":"14","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\History.jsx":"15","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\Receiver.jsx":"16","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\Notification.jsx":"17","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\Transaction.jsx":"18","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\ForgotPassword.jsx":"19","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\Personal.jsx":"20","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\admin\\HomePage.jsx":"21","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\admin\\ManageEmployee.jsx":"22","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\admin\\History.jsx":"23","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\HomePage.jsx":"24","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\header\\Header.jsx":"25","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\footer\\Footer.jsx":"26","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\filter.js":"27","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\list-customer.js":"28","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\list-item.js":"29","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\popup.js":"30","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\recharge-model.js":"31"},{"size":691,"mtime":1611233012258,"results":"32","hashOfConfig":"33"},{"size":2332,"mtime":1611233012227,"results":"34","hashOfConfig":"33"},{"size":5141,"mtime":1611233012261,"results":"35","hashOfConfig":"33"},{"size":681,"mtime":1611233012229,"results":"36","hashOfConfig":"33"},{"size":10000,"mtime":1611233012246,"results":"37","hashOfConfig":"33"},{"size":1514,"mtime":1611233012235,"results":"38","hashOfConfig":"33"},{"size":2409,"mtime":1611249798956,"results":"39","hashOfConfig":"33"},{"size":9826,"mtime":1611233012243,"results":"40","hashOfConfig":"33"},{"size":2881,"mtime":1611233012233,"results":"41","hashOfConfig":"33"},{"size":1060,"mtime":1611233012257,"results":"42","hashOfConfig":"33"},{"size":775,"mtime":1611233012237,"results":"43","hashOfConfig":"33"},{"size":3959,"mtime":1611233012234,"results":"44","hashOfConfig":"33"},{"size":343,"mtime":1611233012235,"results":"45","hashOfConfig":"33"},{"size":7608,"mtime":1611233012240,"results":"46","hashOfConfig":"33"},{"size":9978,"mtime":1611233012239,"results":"47","hashOfConfig":"33"},{"size":12169,"mtime":1611233012242,"results":"48","hashOfConfig":"33"},{"size":2265,"mtime":1611233012241,"results":"49","hashOfConfig":"33"},{"size":9283,"mtime":1611233012243,"results":"50","hashOfConfig":"33"},{"size":13452,"mtime":1611233012238,"results":"51","hashOfConfig":"33"},{"size":8742,"mtime":1611233012241,"results":"52","hashOfConfig":"33"},{"size":15109,"mtime":1611233012232,"results":"53","hashOfConfig":"33"},{"size":15118,"mtime":1611233012232,"results":"54","hashOfConfig":"33"},{"size":10082,"mtime":1611233012231,"results":"55","hashOfConfig":"33"},{"size":727,"mtime":1611233012244,"results":"56","hashOfConfig":"33"},{"size":6221,"mtime":1611233012256,"results":"57","hashOfConfig":"33"},{"size":3704,"mtime":1611233012254,"results":"58","hashOfConfig":"33"},{"size":2082,"mtime":1611233012250,"results":"59","hashOfConfig":"33"},{"size":1332,"mtime":1611233012251,"results":"60","hashOfConfig":"33"},{"size":3500,"mtime":1611246378386,"results":"61","hashOfConfig":"33"},{"size":6883,"mtime":1611233012252,"results":"62","hashOfConfig":"33"},{"size":2472,"mtime":1611250604654,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1mtpx1n",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\index.js",[],["141","142"],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\App.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\serviceWorker.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\app\\store.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\create-account.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\auth\\authSlice.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\employeeSlice.js",["143"],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\customerSlice.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\admin\\adminSlice.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\header\\headerSlice.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\auth\\Login.jsx",["144"],"import { React, useState, useEffect } from 'react';\r\nimport { login } from './authSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button,Container,Row, Col,Jumbotron } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport function Login() {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [alert, setAlert] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const dispath = useDispatch();\r\n    const loggedIn = useSelector(state => state.auth.loggedIn);\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n        if(loggedIn && isSubscribed)\r\n        {\r\n            if(localStorage.permission === 'customer'){\r\n                history.push('/customer/homepage');\r\n            }\r\n            else if(localStorage.permission === 'admin'){\r\n                history.push('/admin/homepage');\r\n            }\r\n            else if(localStorage.permission === 'employee'){\r\n                history.push('/employee/homepage');\r\n            }\r\n        }\r\n\r\n        return function cleanup(){\r\n            isSubscribed = false;\r\n        }\r\n    },[loggedIn]);\r\n\r\n    function handleLogin(event) {\r\n        event.preventDefault();\r\n\r\n        dispath(login(username, password));\r\n\r\n        //show alert\r\n        setTimeout(() => {\r\n            setAlert(true);\r\n        }, 2000);\r\n\r\n        //hide alert\r\n        setTimeout(() => {\r\n            setAlert(false);\r\n        }, 5000);\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{textAlign:\"center\"}}>\r\n            <Container style={{borderRadius:\"30px\",marginTop:\"150px\", \r\n            boxShadow:\"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n            backgroundColor:\"white\", width:\"800px\"}}>\r\n                <Row>\r\n                    <Col style={{backgroundColor:\"#24305E\", borderRadius:\"30px 0px 0px 30px\"}}>\r\n                        <Jumbotron style={{backgroundColor:\"#24305E\", borderRadius:\"30px 0px 0px 30px\", color:\"white\"}}>\r\n                            <h1 style={{fontSize:\"40px\"}}>Welcome to Internet Banking</h1>\r\n                            <p style={{marginTop:\"25px\", fontSize:\"20px\"}}>\r\n                                We provide you the easiest way to transfer your money to everyone\r\n                            </p>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form onSubmit={handleLogin} style={{height:\"100px\", width:\"250px\",display:\"inline-block\" ,textAlign:\"left\", marginTop:\"50px\"}}>\r\n                            <Form.Group style={{textAlign:\"center\"}}>\r\n                                <h3 style={{ color:\"#24305E\"}}>Sign in</h3>\r\n                            </Form.Group>\r\n                            {loggedIn === false && alert === true ? <h6 style={{ color: \"red\" }}>Incorrect username or password</h6> : null}\r\n                            <Form.Group>\r\n                                <Form.Control value={username} onChange={event => setUsername(event.target.value)} placeholder=\"Username\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group style={{marginBottom:\"0\"}}>\r\n                                <Form.Control value={password} onChange={event => setPassword(event.target.value)} type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Group>\r\n\r\n                            <div align=\"end\">\r\n                                <a style={{fontSize:\"13px\", fontWeight:\"600\",textDecoration:\"none\", color:\"#24305E\"}} href=\"/forgot-password\">Forgot your password ?</a>\r\n                            </div>\r\n\r\n                            <Button type=\"submit\" style={{width:\"inherit\", marginTop:\"20px\", backgroundColor:\"#24305E\"}}> Sign in </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\auth\\PrivateRoute.jsx",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\HomePage.jsx",["145"],"import React,{useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Row,Col,Card,Jumbotron,Button, Table} from 'react-bootstrap';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {\r\n    lastFiveHistoryAsync,\r\n    getAllAccountsAsync\r\n} from './customerSlice';\r\n\r\n function HomePage() {\r\n    const loggedIn = useSelector(state => state.auth.loggedIn);\r\n\r\n    const checkingAccount = useSelector(state => state.customer.checkingAccountInfo);\r\n\r\n    const savingAccount = useSelector(state => state.customer.savingAccountInfo);\r\n    console.log(savingAccount);\r\n\r\n    const recentTransaction = useSelector(state => state.customer.lastFiveHistory);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(loggedIn === true || localStorage !== ''){\r\n            dispatch(getAllAccountsAsync());\r\n            dispatch(lastFiveHistoryAsync());\r\n        }\r\n    }, [loggedIn])\r\n\r\n    function handleClickTalbe(){\r\n        history.push('/customer/history');\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div style={{backgroundColor:\"#24305E\"}}>\r\n                <div style={{marginRight:\"100px\", marginLeft:\"100px\"}}>\r\n                    <Row style={{margin:\"0\"}}>\r\n                        <Col style={{padding:\"0\"}}>\r\n                            <Jumbotron style={{backgroundColor:\"#24305E\",paddingLeft:\"0\",paddingRight:\"0\", borderRadius:\"0\"}}>\r\n                                <h1 style={{color:\"white\", fontSize:\"50px\"}}>Internet Banking</h1>\r\n                                <p  style={{color:\"white\", width:\"500px\", fontSize:\"30px\"}} >\r\n                                    Working for customer satisfaction\r\n                                </p>\r\n                                <p>\r\n                                    <Button style={{backgroundColor:\"white\", color:\"#24305E\",borderRadius:\"20px\", fontWeight:\"700\" , marginTop:\"50px\"}}>\r\n                                            Learn more\r\n                                    </Button>\r\n                                </p>\r\n                            </Jumbotron>\r\n                        </Col>\r\n                        <Col style={{padding:\"0\"}} align=\"end\">\r\n                            <img src=\"/logo.png\" style={{width:\"300px\"}} alt=\"\"/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{marginTop:\"40px\", marginLeft:\"100px\", marginRight:\"100px\"}}>\r\n                <Card style={{borderRadius:\"10px\", height:\"175px\",\r\n                boxShadow:\"0 4px 8px 0 rgba(0,0,0,0.2)\",\r\n                backgroundImage:\"linear-gradient(to right,#83a4d4,#b6fbff)\"}}>\r\n                    <Row>\r\n                        <Col>\r\n                            <ul style={{listStyleType:\"none\", color:\"#24305E\"}}>\r\n                                <li style={{fontWeight:\"600\", fontSize:\"30px\"}}>Checking Account Balance</li>          \r\n                                <li style={{fontSize:\"40px\",fontFamily:\"fantasy\", marginTop:\"55px\"}}>{checkingAccount.Money}</li> \r\n                            </ul>\r\n                        </Col>\r\n                        <Col>\r\n                            <ul style={{display:\"flex\",color:\"gray\",\r\n                            fontFamily:\"monospace\",fontSize:\"25px\",\r\n                            fontWeight:\"600\",listStyleType:\"none\", \r\n                            justifyContent:\"space-between\", paddingInlineEnd:\"40px\",\r\n                            paddingInlineStart:\"0\",marginTop:\"130px\"}}>\r\n                                <li>{localStorage.username}</li>\r\n                                <li>{checkingAccount.AccountNumber}</li>\r\n                                <li>{checkingAccount.DateCreate}</li>\r\n                            </ul>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n\r\n                <div>\r\n                    {savingAccount.length > 0\r\n                    ?<div>\r\n                        {savingAccount.map(item => (\r\n                            <Card key={item.ID} style={{borderRadius:\"10px\", height:\"175px\",marginTop:\"20px\",\r\n                            boxShadow:\"0 4px 8px 0 rgba(0,0,0,0.2)\",\r\n                            backgroundImage:\"linear-gradient(to right,#83a4d4,#b6fbff)\"}}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ul style={{listStyleType:\"none\", color:\"#24305E\"}}>\r\n                                            <li style={{fontWeight:\"600\", fontSize:\"30px\"}}>Saving Account Balance</li>\r\n                                             <li style={{fontSize:\"40px\", fontFamily:\"fantasy\", marginTop:\"55px\"}}>{item.Money}</li>\r\n                                        </ul>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <ul style={{display:\"flex\",color:\"gray\",\r\n                                        fontFamily:\"monospace\",fontSize:\"25px\",\r\n                                        fontWeight:\"600\",listStyleType:\"none\", \r\n                                        justifyContent:\"space-between\", paddingInlineEnd:\"40px\",\r\n                                        paddingInlineStart:\"0\",marginTop:\"130px\"}}>\r\n                                            <li>{localStorage.username}</li>\r\n                                            <li>{item.AccountNumber}</li>\r\n                                            <li>{item.DateCreate}</li>\r\n                                        </ul>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                    :null}\r\n                </div>\r\n                \r\n                <div style={{marginTop:\"40px\"}}>\r\n                    <h4>Recent transactions</h4>\r\n                    <Table hover style={{ backgroundColor:\"white\"}} onClick={handleClickTalbe}>\r\n                        <tbody style={{cursor:\"pointer\"}}>\r\n                            {recentTransaction.map(item =>(\r\n                                <tr key={item.ID}>\r\n                                    {item.SenderID === +localStorage.userID\r\n                                    ?<td style={{color:\"red\", width:\"120px\"}}><CallMadeIcon/>Sent</td>\r\n                                    :<td style={{color:\"green\", width:\"120px\"}}><CallReceivedIcon/>Received</td>}\r\n\r\n                                    <td style={{width:\"150px\"}}><AttachMoneyIcon/>{item.Money}</td>\r\n\r\n                                    {item.SenderID === +localStorage.userID\r\n                                    ?<td style={{width:\"80px\"}}>to</td>\r\n                                    :<td style={{width:\"80px\"}}>from</td>}\r\n\r\n                                    {item.SenderID === +localStorage.userID\r\n                                    ?<td>{item.ReceiverNumber}</td>\r\n                                    :<td>{item.SenderNumber}</td>}\r\n\r\n                                    <td align=\"end\">{item.DateSend} <AccessTimeIcon/></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default HomePage","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\History.jsx",["146"],"import React,{useEffect, useState} from 'react';\r\nimport {Table, Row, Button, Modal,ListGroup, Col} from 'react-bootstrap';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n    sendHistoryAsync, \r\n    receiveHistoryAsync,\r\n    getUserProfileAsync\r\n} from './customerSlice';\r\n\r\nfunction History() {\r\n\r\n    const sendHistoryList = useSelector(state => state.customer.sendHistory);\r\n    const receiveHistoryList = useSelector(state => state.customer.receiveHistory);\r\n    const userProfile = useSelector(state => state.customer.userProfile);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [showDetail, setShowDetail] = useState(false);\r\n\r\n    const [showProgress, setShowProgress] = useState(true);\r\n\r\n    const [transactionId, setTransactionId] = useState('');\r\n\r\n    const [senderName, setSenderName] = useState('');\r\n    const [senderNumber, setSenderNumber] = useState('');\r\n\r\n    const [receiverName, setReceiverName] = useState('');\r\n    const [receiverNumber, setReceiverNumber] = useState('');\r\n\r\n    const [amount, setAmount] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(sendHistoryAsync());\r\n        dispatch(receiveHistoryAsync());\r\n    },[])\r\n\r\n    //khi api trả về kết quả cho userProfile (userProfile changes it's value) rồi mới setState\r\n    useEffect(() => {\r\n        setSenderName(userProfile.senderProfile.fullName);\r\n        setReceiverName(userProfile.receiverProfile.fullName);\r\n    }, [userProfile]);\r\n    \r\n    function handleViewDetail(object){\r\n        setShowDetail(true);\r\n\r\n        setTransactionId(object.ID);\r\n\r\n        setSenderNumber(object.SenderNumber);\r\n        setReceiverNumber(object.ReceiverNumber);\r\n\r\n        setAmount(object.Money);\r\n        setMessage(object.Content);\r\n        setTime(object.DateSend);\r\n        \r\n        dispatch(getUserProfileAsync(object.SenderID, object.ReceiverID));\r\n\r\n        setTimeout(()=>{\r\n            setShowProgress(false);\r\n         }, 2000);\r\n    }\r\n\r\n    function handleCloseDetail(){\r\n        setShowDetail(false);\r\n        setShowProgress(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{marginTop:\"50px\",marginLeft:\"100px\", marginRight:\"100px\"}}>\r\n                <Row style={{margin:\"0px\"}}>\r\n                    <h4 style={{color:\"#24305E\"}}>Send History</h4>\r\n                    <br/>\r\n                    <br/>\r\n                    <Table style={{ backgroundColor:\"white\"}}>\r\n                        <thead align=\"center\" style={{color:\"white\", backgroundColor:\"#24305E\"}}>\r\n                            <tr>\r\n                                <th style={{width:\"220px\", fontWeight:\"400\"}}>Date</th>\r\n                                <th style={{fontWeight:\"400\"}}>Description</th>\r\n                                <th style={{width:\"180px\", fontWeight:\"400\"}}>Amount</th>\r\n                                <th style={{width:\"100px\", fontWeight:\"400\"}}>Status</th>\r\n                                <th style={{width:\"100px\", fontWeight:\"450\"}}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody align=\"center\"  style={{color:\"gray\", fontWeight:\"600\"}}>\r\n                            {sendHistoryList.map(item => (\r\n                                <tr key={item.ID}>\r\n                                    <td>{item.DateSend}</td>\r\n                                    <td>{item.Content}</td>\r\n                                    <td>{item.Money}</td>\r\n                                    <td style={{color:\"green\", fontWeight:\"600\"}}>Success</td>\r\n                                    <td>\r\n                                        <Button onClick={()=>handleViewDetail(item)} style={{borderRadius:\"20px\",backgroundColor:\"#24305E\", width:\"110px\", fontSize:\"12px\"}}>\r\n                                            <i style={{marginRight:\"5px\"}} className=\"fas fa-info-circle\"></i>View detail\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n                <Row style={{margin:\"0px\"}}>\r\n                    <h4 style={{color:\"#24305E\"}}>Receive History</h4>\r\n                    <br/>\r\n                    <br/>\r\n                    <Table style={{ backgroundColor:\"white\"}}>\r\n                        <thead align=\"center\" style={{color:\"white\", backgroundColor:\"#24305E\"}}>\r\n                            <tr>\r\n                                <th style={{width:\"220px\", fontWeight:\"400\"}}>Date</th>\r\n                                <th style={{fontWeight:\"400\"}}>Description</th>\r\n                                <th style={{width:\"180px\", fontWeight:\"400\"}}>Amount</th>\r\n                                <th style={{width:\"100px\", fontWeight:\"400\"}}>Status</th>\r\n                                <th style={{width:\"100px\", fontWeight:\"400\"}}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody align=\"center\" style={{color:\"gray\", fontWeight:\"600\"}}>\r\n                            {receiveHistoryList.map(item => (\r\n                                <tr key={item.ID}>\r\n                                    <td>{item.DateSend}</td>\r\n                                    <td>{item.Content}</td>\r\n                                    <td>{item.Money}</td>\r\n                                    <td style={{color:\"green\", fontWeight:\"600\"}}>Success</td>\r\n                                    <td>\r\n                                        <Button onClick={()=>handleViewDetail(item)} style={{borderRadius:\"20px\",backgroundColor:\"#24305E\" ,width:\"110px\", fontSize:\"12px\"}}>\r\n                                            <i style={{marginRight:\"5px\"}} className=\"fas fa-info-circle\"></i>View detail\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </div>\r\n                                \r\n            {/* view send transaction detail modal */}\r\n            <Modal show={showDetail} onHide={handleCloseDetail}   size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Transaction Detail</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                {showProgress === true\r\n                   ?<div style={{textAlign:\"center\"}}>\r\n                        <CircularProgress/>\r\n                   </div>\r\n                   :<div>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Trasaction ID</Col>\r\n                                    <Col>{transactionId}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Sender Number</Col>\r\n                                    <Col>{senderNumber}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Sender Name</Col>\r\n                                    <Col>{senderName}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Receiver Number</Col>\r\n                                    <Col>{receiverNumber}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Receiver Name</Col>\r\n                                    <Col>{receiverName}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Amount</Col>\r\n                                    <Col>{amount}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Message</Col>\r\n                                    <Col>{message}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Time</Col>\r\n                                    <Col>{time}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </div>}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleCloseDetail}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\Receiver.jsx",["147"],"import React,{useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Table, Row, Button, Modal, Form} from 'react-bootstrap';\r\nimport {\r\n    resetResponseResult,\r\n    receiverListAsync, \r\n    addReceiverAsync, \r\n    editReceiverAsync, \r\n    removeReceiverAsync} from './customerSlice';\r\n\r\nfunction Receiver() {\r\n\r\n    const receiverList = useSelector(state => state.customer.receiverList);\r\n    const isActionSuccess =  useSelector(state => state.customer.isSuccess);\r\n    const errorMessage = useSelector(state => state.customer.errorMessage);\r\n    const dispatch = useDispatch();\r\n\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showRemoveModal, setShowRemoveModal] = useState(false);\r\n\r\n    //number và nickname cho add modal\r\n    const [number, setNumber] = useState('');\r\n    const [nickName, setNickName]  = useState('');\r\n\r\n    //number, nickname cho selected row\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [selectedNumber, setSelectedNumber] = useState('');\r\n    const [selectedNickName, setSelectedNickName]  = useState('');\r\n\r\n\r\n    const [showResult, setShowResult] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(receiverListAsync());\r\n    },[])\r\n\r\n    function handleCloseModal(){\r\n        setNumber('');\r\n        setNickName('');\r\n        setShowAddModal(false);\r\n        setShowEditModal(false);\r\n        setShowRemoveModal(false);\r\n    }\r\n\r\n    function handleAddReceiver(){\r\n        dispatch(resetResponseResult());\r\n        dispatch(addReceiverAsync(number, nickName));\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(true);\r\n        }, 1000);\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(false);\r\n        }, 4000);\r\n    }\r\n\r\n    function handleShowEditModal(id, accountNumber, nickName){\r\n        setSelectedId(id);\r\n        setSelectedNumber(accountNumber);\r\n        setSelectedNickName(nickName);\r\n        setShowEditModal(true);\r\n    }\r\n\r\n    function handleShowRemoveModal(id, accountNumber, nickName){\r\n        setSelectedId(id);\r\n        setSelectedNumber(accountNumber);\r\n        setSelectedNickName(nickName);\r\n        setShowRemoveModal(true);\r\n    }\r\n\r\n    function handleEditReceiver(){\r\n        dispatch(resetResponseResult());\r\n        dispatch(editReceiverAsync(selectedId, selectedNickName));\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(true);\r\n        }, 1000);\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(false);\r\n        }, 4000);\r\n        setShowEditModal(true);\r\n    }\r\n\r\n    function handleRemoveReceiver(){\r\n        dispatch(resetResponseResult());\r\n        dispatch(removeReceiverAsync(selectedId));\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(true);\r\n        }, 1000);\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(false);\r\n        }, 4000);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div style={{marginTop:\"50px\", marginLeft:\"100px\", marginRight:\"100px\"}}>\r\n                <Row style={{margin:\"0px\"}}>\r\n                    <ul style={{display:\"flex\", paddingLeft:\"0\"}}>\r\n                        <li style={{display:\"inline-block\"}}>\r\n                            <h4>Receiver List</h4>\r\n                        </li>\r\n                        <li style={{display:\"inline-block\", marginLeft:\"20px\"}}>\r\n                            <Button onClick={()=>setShowAddModal(true)} style={{backgroundColor:\"#24305E\",fontSize:\"12px\", borderRadius:\"20px\", width:\"90px\", height:\"32px\"}}>\r\n                                <i style={{marginRight:\"10px\"}} className=\"fas fa-user-plus\"></i>\r\n                                Add \r\n                            </Button>\r\n                        </li>\r\n                    </ul>\r\n                    <br/>\r\n                    <br/>\r\n                    <Table style={{ backgroundColor:\"white\"}}>\r\n                        <thead align=\"center\" style={{color:\"white\", backgroundColor:\"#24305E\"}}>\r\n                            <tr>\r\n                                <th style={{ fontWeight:\"400\"}}>Nick Name</th>\r\n                                <th style={{ fontWeight:\"400\"}}>Account Number</th>\r\n                                <th style={{ fontWeight:\"400\", width:\"250px\"}}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody align=\"center\"  style={{color:\"gray\", fontWeight:\"600\"}}>\r\n                            {receiverList.map(item => (\r\n                                <tr key={item.ID}>\r\n                                    <td>{item.NickName}</td>\r\n                                    <td>{item.AccountNumber}</td>\r\n                                    <td>\r\n                                        <ul style={{display:\"flex\",justifyContent:\"space-around\", paddingLeft:\"0px\", marginBottom:\"0px\"}}>\r\n                                            <li style={{display:\"inline-block\"}}>\r\n                                                <Button onClick={()=>handleShowEditModal(item.ID, item.AccountNumber, item.NickName)} \r\n                                                style={{backgroundColor:\"#24305E\", borderRadius:\"20px\",fontSize:\"12px\", width:\"90px\"}}>\r\n                                                    <i style={{marginRight:\"5px\"}} className=\"fas fa-edit\"></i>\r\n                                                    Edit\r\n                                                </Button>\r\n                                            </li>\r\n                                            <li style={{display:\"inline-block\"}}>\r\n                                                <Button onClick={()=>handleShowRemoveModal(item.ID, item.AccountNumber, item.NickName)} \r\n                                                style={{backgroundColor:\"#24305E\", borderRadius:\"20px\", fontSize:\"12px\", width:\"90px\"}}>\r\n                                                    <i style={{marginRight:\"5px\"}} className=\"fas fa-trash-alt\"></i>\r\n                                                    Remove\r\n                                                </Button>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </div>\r\n            {/* Add receiver modal */}\r\n            <Modal show={showAddModal} onHide={()=>setShowAddModal(false)} backdrop=\"static\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Add receiver</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Control onChange={(event)=>setNumber(event.target.value)} value={number} type=\"number\" placeholder=\"Receiver's checking account number\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setNickName(event.target.value)} value={nickName} type=\"text\" placeholder=\"Receiver's nick name\" />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group>\r\n                            {isActionSuccess === true && showResult === true\r\n                            ?<h6 style={{color: \"green\", textAlign:\"center\"}}>Success</h6>\r\n                            :null}\r\n\r\n                            {isActionSuccess === false && showResult === true\r\n                            ?<h6 style={{color: \"red\", textAlign:\"center\"}}>{errorMessage}</h6>\r\n                            :null}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleCloseModal}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>Close\r\n                    </Button>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleAddReceiver}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-save\"></i>Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Edit receiver modal */}\r\n            <Modal show={showEditModal} onHide={()=>setShowEditModal(false)} backdrop=\"static\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Edit receiver</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        <Form.Control type=\"number\" value={selectedNumber} readOnly/>\r\n                        <br/>\r\n                        <Form.Control type=\"text\" value={selectedNickName} onChange={(event) => setSelectedNickName(event.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                            {isActionSuccess === true && showResult === true\r\n                            ?<h6 style={{color: \"green\", textAlign:\"center\"}}>Success</h6>\r\n                            :null}\r\n\r\n                            {isActionSuccess === false && showResult === true\r\n                            ?<h6 style={{color: \"red\", textAlign:\"center\"}}>{errorMessage}</h6>\r\n                            :null}\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleCloseModal}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>Close\r\n                    </Button>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleEditReceiver}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-save\"></i>Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Remove modal */}\r\n            <Modal show={showRemoveModal} onHide={()=>setShowRemoveModal(false)} backdrop=\"static\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Are you sure to remove this receiver</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        <Form.Control type=\"number\" value={selectedNumber} readOnly/>\r\n                        <br/>\r\n                        <Form.Control type=\"text\" value={selectedNickName} readOnly/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                            {isActionSuccess === true && showResult === true\r\n                            ?<h6 style={{color: \"green\", textAlign:\"center\"}}>Success</h6>\r\n                            :null}\r\n\r\n                            {isActionSuccess === false && showResult === true\r\n                            ?<h6 style={{color: \"red\", textAlign:\"center\"}}>{errorMessage}</h6>\r\n                            :null}\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleCloseModal}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>\r\n                        Cancle\r\n                    </Button>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleRemoveReceiver}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-save\"></i>\r\n                        Remove\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Receiver;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\Notification.jsx",["148"],"import React,{useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n    getAllShownNotificationAsync,\r\n    deleteNotificationAsync\r\n} from './customerSlice';\r\n\r\nfunction Notification() {\r\n\r\n    const notification = useSelector(state => state.customer.shownNotification);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    setTimeout(()=>{\r\n        setShow(true);\r\n    },2000)\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getAllShownNotificationAsync());\r\n    }, []);\r\n\r\n    function handleRemoveNotification(object){\r\n        dispatch(deleteNotificationAsync(object.ID));\r\n    }\r\n\r\n    return (\r\n        <div style={{marginRight:\"100px\", marginLeft:\"100px\", marginTop:\"40px\", minHeight:\"200px\"}}>\r\n            {show === true\r\n            ?<div>\r\n                {notification.length > 0\r\n                ?<ListGroup variant=\"flush\" style={{borderRadius:\"10px\"}}>\r\n                    {notification.map((item) =>(\r\n                    <ListGroup.Item key={item.ID}>\r\n                        <ul style={{display:\"flex\",padding:\"0\" ,justifyContent:\"space-between\", listStyleType:\"none\", marginBottom:\"0\"}}>\r\n                            <li style={{width:\"200px\"}}>Received {item.Money} $</li>\r\n                            <li style={{width:\"300px\"}}>{item.Content}</li>\r\n                            <li style={{width:\"200px\"}}>{item.Time}</li>\r\n                            <li style={{cursor:\"pointer\"}} onClick={()=>handleRemoveNotification(item)}>\r\n                                <DeleteOutlineIcon />\r\n                            </li>\r\n                        </ul>\r\n                    </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n                :<div style={{height:\"300px\"}}>\r\n                    <h5 align=\"center\">You have seen all notifications</h5>\r\n                </div>}\r\n            </div>\r\n            :<div style={{textAlign:\"center\"}}>\r\n                <CircularProgress/>\r\n            </div>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\Transaction.jsx",["149","150"],"import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { Col, Form, Row,Dropdown,Table,Button } from 'react-bootstrap';\r\nimport {\r\n    receiverListAsync,\r\n    sendOTPCodeAsync,\r\n    transferMoneyAsync,\r\n    getAllAccountsAsync,\r\n    resetResponseResult,\r\n} from './customerSlice';\r\n\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction Transaction() {\r\n\r\n    const receiverList = useSelector(state => state.customer.receiverList);\r\n    const transactionResult = useSelector(state => state.customer.isSuccess);//true or false\r\n    const errorMessage = useSelector(state => state.customer.errorMessage);\r\n    const checkingAccount = useSelector(state => state.customer.checkingAccountInfo);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [number, setNumber] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [otpCode, setOtpCode] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [step, setStep] = useState(1);\r\n    const [showProgress, setShowProgress] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(receiverListAsync());\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllAccountsAsync());   \r\n    }, [])\r\n\r\n    function handleSubmitForm1(event){\r\n        event.preventDefault();\r\n        dispatch(sendOTPCodeAsync());\r\n        setStep(2);\r\n    }\r\n\r\n    function handleSubmitForm2(event){\r\n        event.preventDefault();\r\n        dispatch(resetResponseResult());\r\n        \r\n        const transactionInfo={\r\n            SenderNumber: checkingAccount.AccountNumber,\r\n            ReceiverNumber:number,\r\n            Money:amount,\r\n            Content:message\r\n        };\r\n\r\n        dispatch(transferMoneyAsync(transactionInfo, otpCode));\r\n        setStep(3);\r\n        setShowProgress(true);\r\n\r\n        setTimeout(()=>{\r\n            setShowProgress(false);\r\n        },5000);\r\n    }\r\n\r\n    return (\r\n        <div style={{marginRight:\"100px\", marginLeft:\"100px\"}}>\r\n            <Row style={{textAlign:\"center\",marginTop:\"20px\", marginRight:\"0px\",marginLeft:\"0px\",backgroundColor:\"white\", borderRadius:\"10px\"}}>\r\n                <Col>\r\n                    <Button style={ \r\n                        step===1 \r\n                        ?{backgroundColor:\"#24305E\", cursor:\"default\", borderRadius:\"50%\", width:\"38px\"} \r\n                        :{backgroundColor:\"#6c757d\", cursor:\"default\", borderRadius:\"50%\", width:\"38px\"}}>\r\n                        1\r\n                    </Button>\r\n                </Col>\r\n                <Col>\r\n                    <Button style={ \r\n                        step===2 \r\n                        ?{backgroundColor:\"#24305E\", cursor:\"default\", borderRadius:\"50%\", width:\"38px\"} \r\n                        :{backgroundColor:\"#6c757d\", cursor:\"default\", borderRadius:\"50%\", width:\"38px\"}}>\r\n                        2\r\n                    </Button>\r\n                </Col>\r\n                <Col>\r\n                    <Button style={ \r\n                        step===3 \r\n                        ?{backgroundColor:\"#24305E\", cursor:\"default\", borderRadius:\"50%\", width:\"38px\"} \r\n                        :{backgroundColor:\"#6c757d\", cursor:\"default\", borderRadius:\"50%\", width:\"38px\"}}>\r\n                        3\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop:\"20px\", marginRight:\"0px\",marginLeft:\"0px\", height:\"500px\", backgroundColor:\"white\", borderRadius:\"10px\"}}>\r\n                <Col style={{paddingTop:\"30px\"}}>\r\n                    <Form onSubmit={handleSubmitForm1} style={{padding:\"0px 40px 0px 40px\"}}>\r\n                        <Form.Group>\r\n                            <Form.Label style={{color:\"#24305E\", fontWeight:\"600\"}}>Receiver's account number:</Form.Label>\r\n                            <Form.Control required disabled = {step === 1 ? false : true} value={number} onChange={(event)=>setNumber(event.target.value)} type=\"number\" placeholder=\"Receiver's account number\"></Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle disabled = {step === 1 ? false : true} id=\"dropdown-basic\" style={{backgroundColor:\"#24305E\", color:\"white\", width:\"100%\"}}>\r\n                                    Or chose from receiver list\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Table hover style={{fontSize:\"13px\", width:\"270px\"}}>\r\n                                        <thead>\r\n                                            <tr>\r\n                                            <th>Nick Name</th>\r\n                                            <th>Account Number</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {receiverList.map(item =>(\r\n                                                <tr style={{cursor:\"pointer\"}}\r\n                                                onClick={()=>setNumber(item.AccountNumber)} key={item.ID}>\r\n                                                    <td>{item.NickName}</td>\r\n                                                    <td>{item.AccountNumber}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label style={{color:\"#24305E\", fontWeight:\"600\"}}>Amount:</Form.Label>\r\n                            <Form.Control required disabled = {step === 1 ? false : true} type=\"number\"  placeholder=\"Amount\" \r\n                            value={amount} onChange={(event) => setAmount(event.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label style={{color:\"#24305E\", fontWeight:\"600\"}}>Message:</Form.Label>\r\n                            <Form.Control disabled = {step === 1 ? false : true} as=\"textarea\" rows={4} placeholder=\"Message\"\r\n                            value={message} onChange={(event)=>setMessage(event.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled = {step === 1 ? false : true} \r\n                        type=\"submit\" \r\n                        style={{backgroundColor:\"#24305E\", width:\"100%\"}}>\r\n                            Continue\r\n                        </Button>                       \r\n                    </Form>\r\n                </Col>\r\n\r\n                <Col style={{paddingTop:\"30px\"}}>\r\n                    <Form onSubmit={handleSubmitForm2} style={{padding:\"0px 40px 0px 40px\"}}>\r\n                        <Form.Group>\r\n                            <Form.Label style={{color:\"#24305E\", fontWeight:\"600\"}}>OTP Code:</Form.Label>\r\n                            <Form.Control required disabled = {step === 2 ? false : true} type=\"number\" placeholder=\"OTP Code\"\r\n                            value={otpCode} onChange={(event)=> setOtpCode(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Button disabled = {step === 2 ? false : true} \r\n                        type=\"submit\" \r\n                        style={{backgroundColor:\"#24305E\", width:\"100%\"}}>\r\n                            Continue\r\n                        </Button>                       \r\n                    </Form>\r\n                </Col>\r\n\r\n                <Col style={{textAlign:\"center\", paddingTop:\"30px\"}}>\r\n                    {showProgress === true && step === 3\r\n                    ?<div style={{marginTop:\"60px\"}}>\r\n                        <CircularProgress/>\r\n                    </div>\r\n                    :<div>\r\n                        {transactionResult === true && step === 3\r\n                        ?<ul style={{padding:\"0px 40px 0px 40px\", listStyleType:\"none\", color:\"green\"}}>\r\n                            <li><CheckBoxIcon style={{fontSize:\"70px\"}} /></li>\r\n                            <li style={{fontSize:\"30px\", fontWeight:\"600\"}}>Successful</li>\r\n                        </ul>\r\n                        :null}\r\n\r\n                        {transactionResult === false && step === 3\r\n                        ?<ul style={{padding:\"0px 40px 0px 40px\", listStyleType:\"none\", color:\"red\"}}>\r\n                            <li><ReportProblemIcon style={{fontSize:\"70px\"}} /></li>\r\n                            <li style={{fontSize:\"30px\", fontWeight:\"600\"}}>Failed</li>\r\n                            <li style={{fontSize:\"20px\", fontWeight:\"500\"}}>{errorMessage}</li>\r\n                        </ul>\r\n                        :null}\r\n                    </div>}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Transaction;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\ForgotPassword.jsx",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\customer\\Personal.jsx",["151"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector } from 'react-redux';\r\nimport {Row, Col, Form, Button} from 'react-bootstrap';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n    getProfileAsync,\r\n    sendOTPCodeAsync,\r\n    changePasswordAsync\r\n} from './customerSlice';\r\n\r\nfunction Personal() {\r\n    const dispatch = useDispatch();\r\n    const profile = useSelector(state => state.customer.profile);\r\n    const isSuccess = useSelector(state => state.customer.isSuccess);\r\n    const errorMessage = useSelector(state => state.customer.errorMessage);\r\n\r\n    const [showProgress, setShowProgress] = useState(false);\r\n    const [step, setStep] = useState(1);\r\n\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [otpCode, setOtpCode] = useState('');\r\n\r\n    const [matched, setMatched] = useState(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileAsync());\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(confirmPassword === newPassword && confirmPassword !== '' && newPassword !== ''){\r\n            setMatched(true);\r\n        }\r\n        else if(confirmPassword !== newPassword  && confirmPassword !== '' && newPassword !== ''){\r\n            setMatched(false);\r\n        }\r\n    }, [newPassword, confirmPassword])\r\n\r\n    function handleSendOTP(){\r\n        setStep(2);\r\n        dispatch(sendOTPCodeAsync());\r\n    }\r\n\r\n    function handleChangePassword(){\r\n        dispatch(changePasswordAsync(oldPassword, newPassword, otpCode));\r\n        setStep(3);\r\n        setShowProgress(true);\r\n\r\n        setTimeout(()=>{\r\n            setShowProgress(false);\r\n        }, 3000);\r\n    }\r\n\r\n    function handleBack(){\r\n        setOldPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n        setOtpCode('');\r\n        setStep(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{margin:\"20px 100px\"}}>\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <div style={{backgroundColor:\"white\", borderRadius:\"10px\", padding:'20px'}}>\r\n                        <h4 style={{color:\"#24305E\", textAlign:'center'}}>Personal profile</h4>\r\n                        <Form style={{padding:\"20px\"}}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Full name</Form.Label>\r\n                                    <Form.Control disabled value={profile.FullName} />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Date of birth</Form.Label>\r\n                                    <Form.Control disabled value={profile.Birthday} />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} xs={3}>\r\n                                    <Form.Label>Gender</Form.Label>\r\n                                    <Form.Control disabled value={profile.Gender} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Phone number</Form.Label>\r\n                                    <Form.Control disabled value={profile.Phone} />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control disabled value={profile.Email} />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} xs={3}>\r\n                                    <Form.Label>ID Card</Form.Label>\r\n                                    <Form.Control disabled value={profile.IdentificationCardID} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group>\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control disabled value={profile.Address} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div style={{backgroundColor:\"white\", borderRadius:\"10px\",  padding:'20px'}}>\r\n                        <h4 style={{color:\"#24305E\", textAlign:'center'}}>Change password</h4>\r\n                        {step === 1\r\n                        ?<Form style={{padding:\"20px\"}}> \r\n                            <Form.Group>\r\n                                <Form.Label>Old password</Form.Label>\r\n                                <Form.Control type=\"password\" value={oldPassword} onChange={(event) => setOldPassword(event.target.value)} placeholder=\"Old password\" />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>New password</Form.Label>\r\n                                <Form.Control style={matched === false ? {borderColor:\"red\"} : {borderColor:\"green\"}} type=\"password\" value={newPassword} onChange={(event) => setNewPassword(event.target.value)} placeholder=\"New password\"/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Confirm new password</Form.Label>\r\n                                {matched === false\r\n                                ?<Form.Text style={{color:'red'}} className=\"text-muted\">not match</Form.Text>:null}\r\n                                <Form.Control style={matched === false ? {borderColor:\"red\"} : {borderColor:\"green\"}} type=\"password\" value={confirmPassword} onChange={(event) => setConfirmPassword(event.target.value)} placeholder=\"Confirm new password\"/>\r\n                            </Form.Group>\r\n                            <Button disabled={!matched} onClick={handleSendOTP} style={{width:'-webkit-fill-available', backgroundColor:'#24305E'}}>Continue</Button>\r\n                        </Form>\r\n                        :null}\r\n\r\n                        {step === 2\r\n                        ?<Form>\r\n                            <Form.Group>\r\n                                <Form.Label>We have send you OTP Code, please check your email and verify it here</Form.Label>\r\n                                <Form.Control value={otpCode} onChange={(event) => setOtpCode(event.target.value)} type=\"number\" style={{marginTop:'15px'}} placeholder=\"OTP Code\"/>\r\n                            </Form.Group>\r\n\r\n                            <Button onClick={handleChangePassword} style={{width:'-webkit-fill-available', backgroundColor:'#24305E'}}>Verify</Button>\r\n                        </Form>\r\n                        :null}\r\n\r\n                        {step === 3 && showProgress === true\r\n                        ?<div style={{marginTop:\"40px\", textAlign:'center'}}>\r\n                            <CircularProgress/>\r\n                        </div>\r\n                        :<div style={{marginTop:\"30px\"}}>\r\n                            {isSuccess === true && step === 3\r\n                            ?<div style={{color:\"green\", textAlign:'center'}}>\r\n                                <div><CheckBoxIcon style={{fontSize:\"50px\"}} /></div>\r\n                                <div style={{fontSize:\"25px\", fontWeight:\"600\"}}>Successful</div>\r\n                                <br/>\r\n                                <Button onClick={handleBack} style={{width:'250px', backgroundColor:'#24305E'}}>Back</Button>\r\n                            </div>\r\n                            :null}\r\n\r\n                            {isSuccess === false && step === 3\r\n                            ?<div style={{color:\"red\", textAlign:'center'}}>\r\n                                <div><ReportProblemIcon style={{fontSize:\"50px\"}} /></div>\r\n                                <div style={{fontSize:\"25px\", fontWeight:\"600\"}}>Failed</div>\r\n                                <div style={{fontSize:\"20px\", fontWeight:\"500\"}}>{errorMessage}</div>\r\n                                <br/>\r\n                                <Button onClick={handleBack} style={{width:'250px', backgroundColor:'#24305E'}}>Back</Button>\r\n                            </div>\r\n                            :null}\r\n                        </div>}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Personal;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\admin\\HomePage.jsx",["152"],"import React,{useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Row, Button, Table, Modal, Form} from 'react-bootstrap';\r\nimport { \r\n    resetResponseResult,\r\n    getEmployeeListAsync,\r\n    addEmployeeAsync,\r\n    removeEmployeeAsync,\r\n} from './adminSlice';\r\n\r\nfunction HomePage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const employeeList = useSelector(state => state.admin.employeeList);\r\n    const errorMessage = useSelector(state => state.admin.errorMessage);\r\n    const isSuccess =  useSelector(state => state.admin.isSuccess);\r\n\r\n    useEffect(() => {\r\n        dispatch(getEmployeeListAsync());\r\n    },[])\r\n\r\n    const [id, setId] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [fullName, setFullName] = useState('');\r\n    const [birthday, setBirthday] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [idCard, setIdCard] = useState('');\r\n\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [selectedEmployee, setSelectedEmployee] = useState('');\r\n\r\n    const [showResult, setShowResult] = useState(false);\r\n\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showRemoveModal, setShowRemoveModal] = useState(false);\r\n    const [showDetailModal, setShowDetailModal] = useState(false);\r\n\r\n    function handleShowRemoveModal(employee){\r\n        setShowRemoveModal(true);\r\n        setSelectedEmployee(employee.FullName);\r\n        setSelectedId(employee.ID);\r\n        \r\n    }\r\n\r\n    function handleCloseAddModal(){\r\n        setShowAddModal(false);\r\n        setFullName('');\r\n        setBirthday('');\r\n        setGender('');\r\n        setAddress('');\r\n        setPhone('');\r\n        setEmail('');\r\n        setIdCard('');\r\n    }\r\n\r\n    function handleAddEmployee(){\r\n        dispatch(resetResponseResult());\r\n\r\n        const registerInfo={\r\n            username: username,\r\n            password: password,\r\n            fullName: fullName,\r\n            birthday: birthday,\r\n            gender: gender,\r\n            address: address,\r\n            phone: phone,\r\n            email: email,\r\n            idCard: idCard\r\n        }\r\n\r\n        dispatch(addEmployeeAsync(registerInfo));\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(true);\r\n        },2000);\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(false);\r\n        }, 4000);\r\n    }\r\n\r\n    function handleRemoveEmployee(){\r\n        dispatch(resetResponseResult());\r\n        dispatch(removeEmployeeAsync(selectedId));\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(true);\r\n        },2000);\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(false);\r\n        }, 4000);\r\n    }\r\n\r\n    function handleViewDetail(employee){\r\n        setShowDetailModal(true);\r\n        setId(employee.ID);\r\n        setFullName(employee.FullName);\r\n        setBirthday(employee.Birthday);\r\n        setGender(employee.Gender);\r\n        setAddress(employee.Address);\r\n        setPhone(employee.Phone);\r\n        setEmail(employee.Email);\r\n        setIdCard(employee.IdentificationCardID);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{marginTop:\"50px\", marginLeft:\"100px\", marginRight:\"100px\"}}>\r\n                <Row style={{margin:\"0px\"}}>\r\n                    <ul style={{display:\"flex\", paddingLeft:\"0\"}}>\r\n                        <li style={{display:\"inline-block\"}}>\r\n                            <h4>Employee List</h4>\r\n                        </li>\r\n                        <li style={{display:\"inline-block\", marginLeft:\"20px\"}}>\r\n                            <Button onClick={()=>setShowAddModal(true)} style={{backgroundColor:\"#24305E\",fontSize:\"12px\", borderRadius:\"20px\", width:\"90px\", height:\"32px\"}}>\r\n                                <i style={{marginRight:\"10px\"}} className=\"fas fa-user-plus\"></i>\r\n                                Add \r\n                            </Button>\r\n                        </li>\r\n                    </ul>\r\n                    <br/>\r\n                    <br/>\r\n                    <Table style={{ backgroundColor:\"white\"}}>\r\n                        <thead align=\"center\" style={{color:\"white\", backgroundColor:\"#24305E\"}}>\r\n                            <tr>\r\n                                <th style={{ fontWeight:\"400\"}}>Full Name</th>\r\n                                <th style={{ fontWeight:\"400\"}}>Gender</th>\r\n                                <th style={{ fontWeight:\"400\"}}>Phone</th>\r\n                                <th style={{ fontWeight:\"400\"}}>Email</th>\r\n                                <th style={{ fontWeight:\"400\", width:\"250px\"}}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody align=\"center\"  style={{color:\"gray\", fontWeight:\"600\"}}>\r\n                            {employeeList.map(item => (\r\n                                <tr key={item.ID}>\r\n                                    <td>{item.FullName}</td>\r\n                                    <td>{item.Gender}</td>\r\n                                    <td>{item.Phone}</td>\r\n                                    <td>{item.Email}</td>\r\n                                    <td>\r\n                                        <ul style={{display:\"flex\",justifyContent:\"space-around\",listStyleType:'none' ,paddingLeft:\"0px\", marginBottom:\"0px\"}}>\r\n                                            <li>\r\n                                                <Button onClick={()=>handleViewDetail(item)} \r\n                                                style={{backgroundColor:\"#24305E\", borderRadius:\"20px\", fontSize:\"12px\", width:\"90px\"}}>\r\n                                                    <i style={{marginRight:\"5px\"}} className=\"fas fa-info-circle\"></i>\r\n                                                    Detail\r\n                                                </Button>\r\n                                            </li>\r\n                                            <li>\r\n                                                <Button onClick={()=>handleShowRemoveModal(item)} \r\n                                                style={{backgroundColor:\"#24305E\", borderRadius:\"20px\", fontSize:\"12px\", width:\"90px\"}}>\r\n                                                    <i style={{marginRight:\"5px\"}} className=\"fas fa-trash-alt\"></i>\r\n                                                    Remove\r\n                                                </Button>\r\n                                            </li>\r\n                                        </ul>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </div>\r\n            {/* Add employee modal */}\r\n            <Modal show={showAddModal} onHide={()=>setShowAddModal(false)} backdrop=\"static\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Add employee</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Control onChange={(event)=>setUsername(event.target.value)} value={username} type=\"text\" placeholder=\"username\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setPassword(event.target.value)} value={password} type=\"password\" placeholder=\"password\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setFullName(event.target.value)} value={fullName} type=\"text\" placeholder=\"full name\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setBirthday(event.target.value)} value={birthday} type=\"text\" placeholder=\"date of birth\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setGender(event.target.value)} value={gender} type=\"text\" placeholder=\"gender\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setAddress(event.target.value)} value={address} type=\"text\" placeholder=\"address\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setPhone(event.target.value)} value={phone} type=\"number\" placeholder=\"phone number\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setEmail(event.target.value)} value={email} type=\"text\" placeholder=\"email\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setIdCard(event.target.value)} value={idCard} type=\"number\" placeholder=\"id card\" />\r\n                            <br/>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group>\r\n                            {isSuccess === true && showResult === true\r\n                            ?<h6 style={{color: \"green\", textAlign:\"center\"}}>Success</h6>\r\n                            :null}\r\n\r\n                            {isSuccess === false && showResult === true\r\n                            ?<h6 style={{color: \"red\", textAlign:\"center\"}}>{errorMessage}</h6>\r\n                            :null}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleCloseAddModal}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>Close\r\n                    </Button>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleAddEmployee}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-save\"></i>Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Show detail information modal */}\r\n            <Modal show={showDetailModal} onHide={()=>setShowDetailModal(false)} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Add employee</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>ID:</Form.Label>\r\n                            <Form.Control value={id} type=\"number\" readOnly/>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group>\r\n                            <Form.Label>Full Name:</Form.Label>\r\n                            <Form.Control value={fullName} type=\"text\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Date of Birth:</Form.Label>\r\n                            <Form.Control value={birthday} type=\"text\" readOnly/> \r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Gender:</Form.Label>\r\n                            <Form.Control value={gender} type=\"text\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Address:</Form.Label>\r\n                            <Form.Control value={address} type=\"text\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Phone Number:</Form.Label>\r\n                            <Form.Control value={phone} type=\"number\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Email:</Form.Label>\r\n                            <Form.Control value={email} type=\"text\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>ID Card:</Form.Label>\r\n                            <Form.Control value={idCard} type=\"number\" readOnly/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            {isSuccess === true && showResult === true\r\n                            ?<h6 style={{color: \"green\", textAlign:\"center\"}}>Success</h6>\r\n                            :null}\r\n\r\n                            {isSuccess === false && showResult === true\r\n                            ?<h6 style={{color: \"red\", textAlign:\"center\"}}>{errorMessage}</h6>\r\n                            :null}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={() => setShowDetailModal(false)}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Remove employee  modal */}\r\n            <Modal show={showRemoveModal} onHide={()=>setShowRemoveModal(false)} backdrop=\"static\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Are you sure to remove this employee</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        <Form.Control type=\"text\" value={selectedEmployee} readOnly/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                            {isSuccess === true && showResult === true\r\n                            ?<h6 style={{color: \"green\", textAlign:\"center\"}}>Success</h6>\r\n                            :null}\r\n\r\n                            {isSuccess === false && showResult === true\r\n                            ?<h6 style={{color: \"red\", textAlign:\"center\"}}>{errorMessage}</h6>\r\n                            :null}\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={()=>setShowRemoveModal(false)}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>\r\n                        Cancle\r\n                    </Button>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleRemoveEmployee}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-save\"></i>\r\n                        Remove\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\admin\\ManageEmployee.jsx",["153"],"import React,{useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Row, Button, Table, Modal, Form} from 'react-bootstrap';\r\nimport { \r\n    resetResponseResult,\r\n    getEmployeeListAsync,\r\n    addEmployeeAsync,\r\n    removeEmployeeAsync,\r\n} from './adminSlice';\r\n\r\nfunction ManageEmployee() {\r\n    const dispatch = useDispatch();\r\n    const employeeList = useSelector(state => state.admin.employeeList);\r\n    const errorMessage = useSelector(state => state.admin.errorMessage);\r\n    const isSuccess =  useSelector(state => state.admin.isSuccess);\r\n\r\n    useEffect(() => {\r\n        dispatch(getEmployeeListAsync());\r\n    },[])\r\n\r\n    const [id, setId] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [fullName, setFullName] = useState('');\r\n    const [birthday, setBirthday] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [idCard, setIdCard] = useState('');\r\n\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [selectedEmployee, setSelectedEmployee] = useState('');\r\n\r\n    const [showResult, setShowResult] = useState(false);\r\n\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showRemoveModal, setShowRemoveModal] = useState(false);\r\n    const [showDetailModal, setShowDetailModal] = useState(false);\r\n\r\n    function handleShowRemoveModal(employee){\r\n        setShowRemoveModal(true);\r\n        setSelectedEmployee(employee.FullName);\r\n        setSelectedId(employee.ID);\r\n        \r\n    }\r\n\r\n    function handleCloseAddModal(){\r\n        setShowAddModal(false);\r\n        setFullName('');\r\n        setBirthday('');\r\n        setGender('');\r\n        setAddress('');\r\n        setPhone('');\r\n        setEmail('');\r\n        setIdCard('');\r\n    }\r\n\r\n    function handleAddEmployee(){\r\n        dispatch(resetResponseResult());\r\n\r\n        const registerInfo={\r\n            username: username,\r\n            password: password,\r\n            fullName: fullName,\r\n            birthday: birthday,\r\n            gender: gender,\r\n            address: address,\r\n            phone: phone,\r\n            email: email,\r\n            idCard: idCard\r\n        }\r\n\r\n        dispatch(addEmployeeAsync(registerInfo));\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(true);\r\n        },2000);\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(false);\r\n        }, 4000);\r\n    }\r\n\r\n    function handleRemoveEmployee(){\r\n        dispatch(resetResponseResult());\r\n        dispatch(removeEmployeeAsync(selectedId));\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(true);\r\n        },2000);\r\n\r\n        setTimeout(()=>{\r\n            setShowResult(false);\r\n        }, 4000);\r\n    }\r\n\r\n    function handleViewDetail(employee){\r\n        setShowDetailModal(true);\r\n        setId(employee.ID);\r\n        setFullName(employee.FullName);\r\n        setBirthday(employee.Birthday);\r\n        setGender(employee.Gender);\r\n        setAddress(employee.Address);\r\n        setPhone(employee.Phone);\r\n        setEmail(employee.Email);\r\n        setIdCard(employee.IdentificationCardID);\r\n    }\r\n    return (\r\n        <div>\r\n             <div style={{marginTop:\"50px\", marginLeft:\"100px\", marginRight:\"100px\"}}>\r\n                <Row style={{margin:\"0px\"}}>\r\n                    <ul style={{display:\"flex\", paddingLeft:\"0\"}}>\r\n                        <li style={{display:\"inline-block\"}}>\r\n                            <h4>Employee List</h4>\r\n                        </li>\r\n                        <li style={{display:\"inline-block\", marginLeft:\"20px\"}}>\r\n                            <Button onClick={()=>setShowAddModal(true)} style={{backgroundColor:\"#24305E\",fontSize:\"12px\", borderRadius:\"20px\", width:\"90px\", height:\"32px\"}}>\r\n                                <i style={{marginRight:\"10px\"}} className=\"fas fa-user-plus\"></i>\r\n                                Add \r\n                            </Button>\r\n                        </li>\r\n                    </ul>\r\n                    <br/>\r\n                    <br/>\r\n                    <Table style={{ backgroundColor:\"white\"}}>\r\n                        <thead align=\"center\" style={{color:\"white\", backgroundColor:\"#24305E\"}}>\r\n                            <tr>\r\n                                <th style={{ fontWeight:\"400\"}}>Full Name</th>\r\n                                <th style={{ fontWeight:\"400\"}}>Gender</th>\r\n                                <th style={{ fontWeight:\"400\"}}>Phone</th>\r\n                                <th style={{ fontWeight:\"400\"}}>Email</th>\r\n                                <th style={{ fontWeight:\"400\", width:\"250px\"}}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody align=\"center\"  style={{color:\"gray\", fontWeight:\"600\"}}>\r\n                            {employeeList.map(item => (\r\n                                <tr key={item.ID}>\r\n                                    <td>{item.FullName}</td>\r\n                                    <td>{item.Gender}</td>\r\n                                    <td>{item.Phone}</td>\r\n                                    <td>{item.Email}</td>\r\n                                    <td>\r\n                                        <ul style={{display:\"flex\",justifyContent:\"space-around\",listStyleType:'none' ,paddingLeft:\"0px\", marginBottom:\"0px\"}}>\r\n                                            <li>\r\n                                                <Button onClick={()=>handleViewDetail(item)} \r\n                                                style={{backgroundColor:\"#24305E\", borderRadius:\"20px\", fontSize:\"12px\", width:\"90px\"}}>\r\n                                                    <i style={{marginRight:\"5px\"}} className=\"fas fa-info-circle\"></i>\r\n                                                    Detail\r\n                                                </Button>\r\n                                            </li>\r\n                                            <li>\r\n                                                <Button onClick={()=>handleShowRemoveModal(item)} \r\n                                                style={{backgroundColor:\"#24305E\", borderRadius:\"20px\", fontSize:\"12px\", width:\"90px\"}}>\r\n                                                    <i style={{marginRight:\"5px\"}} className=\"fas fa-trash-alt\"></i>\r\n                                                    Remove\r\n                                                </Button>\r\n                                            </li>\r\n                                        </ul>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </div>\r\n            {/* Add employee modal */}\r\n            <Modal show={showAddModal} onHide={()=>setShowAddModal(false)} backdrop=\"static\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Add employee</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Control onChange={(event)=>setUsername(event.target.value)} value={username} type=\"text\" placeholder=\"username\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setPassword(event.target.value)} value={password} type=\"password\" placeholder=\"password\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setFullName(event.target.value)} value={fullName} type=\"text\" placeholder=\"full name\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setBirthday(event.target.value)} value={birthday} type=\"text\" placeholder=\"date of birth\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setGender(event.target.value)} value={gender} type=\"text\" placeholder=\"gender\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setAddress(event.target.value)} value={address} type=\"text\" placeholder=\"address\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setPhone(event.target.value)} value={phone} type=\"number\" placeholder=\"phone number\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setEmail(event.target.value)} value={email} type=\"text\" placeholder=\"email\" />\r\n                            <br/>\r\n                            <Form.Control onChange={(event)=>setIdCard(event.target.value)} value={idCard} type=\"number\" placeholder=\"id card\" />\r\n                            <br/>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group>\r\n                            {isSuccess === true && showResult === true\r\n                            ?<h6 style={{color: \"green\", textAlign:\"center\"}}>Success</h6>\r\n                            :null}\r\n\r\n                            {isSuccess === false && showResult === true\r\n                            ?<h6 style={{color: \"red\", textAlign:\"center\"}}>{errorMessage}</h6>\r\n                            :null}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleCloseAddModal}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>Close\r\n                    </Button>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleAddEmployee}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-save\"></i>Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Show detail information modal */}\r\n            <Modal show={showDetailModal} onHide={()=>setShowDetailModal(false)} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Add employee</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>ID:</Form.Label>\r\n                            <Form.Control value={id} type=\"number\" readOnly/>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group>\r\n                            <Form.Label>Full Name:</Form.Label>\r\n                            <Form.Control value={fullName} type=\"text\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Date of Birth:</Form.Label>\r\n                            <Form.Control value={birthday} type=\"text\" readOnly/> \r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Gender:</Form.Label>\r\n                            <Form.Control value={gender} type=\"text\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Address:</Form.Label>\r\n                            <Form.Control value={address} type=\"text\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Phone Number:</Form.Label>\r\n                            <Form.Control value={phone} type=\"number\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Email:</Form.Label>\r\n                            <Form.Control value={email} type=\"text\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>ID Card:</Form.Label>\r\n                            <Form.Control value={idCard} type=\"number\" readOnly/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            {isSuccess === true && showResult === true\r\n                            ?<h6 style={{color: \"green\", textAlign:\"center\"}}>Success</h6>\r\n                            :null}\r\n\r\n                            {isSuccess === false && showResult === true\r\n                            ?<h6 style={{color: \"red\", textAlign:\"center\"}}>{errorMessage}</h6>\r\n                            :null}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={() => setShowDetailModal(false)}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Remove employee  modal */}\r\n            <Modal show={showRemoveModal} onHide={()=>setShowRemoveModal(false)} backdrop=\"static\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Are you sure to remove this employee</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        <Form.Control type=\"text\" value={selectedEmployee} readOnly/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                            {isSuccess === true && showResult === true\r\n                            ?<h6 style={{color: \"green\", textAlign:\"center\"}}>Success</h6>\r\n                            :null}\r\n\r\n                            {isSuccess === false && showResult === true\r\n                            ?<h6 style={{color: \"red\", textAlign:\"center\"}}>{errorMessage}</h6>\r\n                            :null}\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={()=>setShowRemoveModal(false)}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>\r\n                        Cancle\r\n                    </Button>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleRemoveEmployee}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-save\"></i>\r\n                        Remove\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageEmployee;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\admin\\History.jsx",["154"],"import React,{useEffect, useState} from 'react';\r\nimport {Table, Row, Button, Modal,ListGroup, Col} from 'react-bootstrap';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n    getAllHistoryAsync,\r\n    getCurrentMonthHistoryAsync,\r\n} from './adminSlice';\r\nimport {\r\n    getUserProfileAsync,\r\n} from '../customer/customerSlice';\r\n\r\nfunction History() {\r\n    const allHistory = useSelector(state => state.admin.allHistory);\r\n    const currentMonthHistory = useSelector(state => state.admin.currentMonthHistory);\r\n    const userProfile = useSelector(state => state.customer.userProfile);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [showDetail, setShowDetail] = useState(false);\r\n\r\n    const [showProgress, setShowProgress] = useState(true);\r\n\r\n    const [transactionId, setTransactionId] = useState('');\r\n\r\n    const [senderName, setSenderName] = useState('');\r\n    const [senderNumber, setSenderNumber] = useState('');\r\n\r\n    const [receiverName, setReceiverName] = useState('');\r\n    const [receiverNumber, setReceiverNumber] = useState('');\r\n\r\n    const [amount, setAmount] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllHistoryAsync());\r\n        dispatch(getCurrentMonthHistoryAsync());\r\n    },[])\r\n\r\n    //khi api trả về kết quả cho userProfile (userProfile changes it's value) rồi mới setState\r\n    useEffect(() => {\r\n        setSenderName(userProfile.senderProfile.fullName);\r\n        setReceiverName(userProfile.receiverProfile.fullName);\r\n    }, [userProfile]);\r\n    \r\n    function handleViewDetail(object){\r\n        setShowDetail(true);\r\n\r\n        setTransactionId(object.ID);\r\n\r\n        setSenderNumber(object.SenderNumber);\r\n        setReceiverNumber(object.ReceiverNumber);\r\n\r\n        setAmount(object.Money);\r\n        setMessage(object.Content);\r\n        setTime(object.DateSend);\r\n        \r\n        dispatch(getUserProfileAsync(object.SenderID, object.ReceiverID));\r\n\r\n        setTimeout(()=>{\r\n            setShowProgress(false);\r\n         }, 2000);\r\n    }\r\n\r\n    function handleCloseDetail(){\r\n        setShowDetail(false);\r\n        setShowProgress(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{marginTop:\"50px\",marginLeft:\"100px\", marginRight:\"100px\"}}>\r\n                <Row style={{margin:\"0px\"}}>\r\n                    <h4 style={{color:\"#24305E\"}}>Current Month Transaction History</h4>\r\n                    <br/>\r\n                    <br/>\r\n                    <Table style={{ backgroundColor:\"white\"}}>\r\n                        <thead align=\"center\" style={{color:\"white\", backgroundColor:\"#24305E\"}}>\r\n                            <tr>\r\n                                <th style={{width:\"220px\", fontWeight:\"400\"}}>Date</th>\r\n                                <th style={{fontWeight:\"400\"}}>Description</th>\r\n                                <th style={{width:\"180px\", fontWeight:\"400\"}}>Amount</th>\r\n                                <th style={{width:\"100px\", fontWeight:\"400\"}}>Status</th>\r\n                                <th style={{width:\"100px\", fontWeight:\"450\"}}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody align=\"center\"  style={{color:\"gray\", fontWeight:\"600\"}}>\r\n                            {currentMonthHistory.map(item => (\r\n                                <tr key={item.ID}>\r\n                                    <td>{item.DateSend}</td>\r\n                                    <td>{item.Content}</td>\r\n                                    <td>{item.Money}</td>\r\n                                    <td style={{color:\"green\", fontWeight:\"600\"}}>Success</td>\r\n                                    <td>\r\n                                        <Button onClick={()=>handleViewDetail(item)} style={{borderRadius:\"20px\",backgroundColor:\"#24305E\", width:\"110px\", fontSize:\"12px\"}}>\r\n                                            <i style={{marginRight:\"5px\"}} className=\"fas fa-info-circle\"></i>View detail\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n                <br/>\r\n                <Row style={{margin:\"0px\"}}>\r\n                    <h4 style={{color:\"#24305E\"}}>All Transaction History</h4>\r\n                    <br/>\r\n                    <br/>\r\n                    <Table style={{ backgroundColor:\"white\"}}>\r\n                        <thead align=\"center\" style={{color:\"white\", backgroundColor:\"#24305E\"}}>\r\n                            <tr>\r\n                                <th style={{width:\"220px\", fontWeight:\"400\"}}>Date</th>\r\n                                <th style={{fontWeight:\"400\"}}>Description</th>\r\n                                <th style={{width:\"180px\", fontWeight:\"400\"}}>Amount</th>\r\n                                <th style={{width:\"100px\", fontWeight:\"400\"}}>Status</th>\r\n                                <th style={{width:\"100px\", fontWeight:\"400\"}}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody align=\"center\" style={{color:\"gray\", fontWeight:\"600\"}}>\r\n                            {allHistory.map(item => (\r\n                                <tr key={item.ID}>\r\n                                    <td>{item.DateSend}</td>\r\n                                    <td>{item.Content}</td>\r\n                                    <td>{item.Money}</td>\r\n                                    <td style={{color:\"green\", fontWeight:\"600\"}}>Success</td>\r\n                                    <td>\r\n                                        <Button onClick={()=>handleViewDetail(item)} style={{borderRadius:\"20px\",backgroundColor:\"#24305E\" ,width:\"110px\", fontSize:\"12px\"}}>\r\n                                            <i style={{marginRight:\"5px\"}} className=\"fas fa-info-circle\"></i>View detail\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </div>\r\n                                \r\n            {/* view send transaction detail modal */}\r\n            <Modal show={showDetail} onHide={handleCloseDetail}   size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{color:\"#24305E\"}}>Transaction Detail</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                {showProgress === true\r\n                   ?<div style={{textAlign:\"center\"}}>\r\n                        <CircularProgress/>\r\n                   </div>\r\n                   :<div>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Trasaction ID</Col>\r\n                                    <Col>{transactionId}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Sender Number</Col>\r\n                                    <Col>{senderNumber}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Sender Name</Col>\r\n                                    <Col>{senderName}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Receiver Number</Col>\r\n                                    <Col>{receiverNumber}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Receiver Name</Col>\r\n                                    <Col>{receiverName}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Amount</Col>\r\n                                    <Col>{amount}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Message</Col>\r\n                                    <Col>{message}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col style={{fontWeight:\"600\"}}>Time</Col>\r\n                                    <Col>{time}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </div>}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button style={{backgroundColor:\"#24305E\", width:\"90px\", borderRadius:\"20px\",fontSize:\"12px\"}} onClick={handleCloseDetail}>\r\n                        <i style={{marginRight:\"5px\"}} className=\"fas fa-window-close\"></i>Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\HomePage.jsx",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\header\\Header.jsx",["155"],"import React,{useEffect} from 'react';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport {logout} from '../auth/authSlice';\r\nimport {getAllNotificationAsync, seenAllNotificationAsync} from './headerSlice';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch();\r\n    const loggedIn = useSelector(state => state.auth.loggedIn);\r\n\r\n    const notifications = useSelector(state => state.header.notification);  \r\n\r\n    useEffect(() => {\r\n        if(localStorage.access_token !=='' || loggedIn===true){\r\n            dispatch(getAllNotificationAsync());\r\n        }\r\n    }, [loggedIn]);\r\n\r\n    function handleLogout(){\r\n        dispatch(logout())\r\n    }\r\n\r\n    function handleClickBell(){\r\n        dispatch(seenAllNotificationAsync());\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor:\"white\"}}>\r\n            <div style={{marginLeft:\"100px\", marginRight:\"100px\"}}>\r\n                {localStorage.access_token !=='' && localStorage.permission === 'customer'\r\n                ?<Navbar style={{paddingRight:\"0px\", paddingLeft:\"0px\"}} expand=\"lg\">\r\n                    <Navbar.Brand style={{color:\"#24305E\", fontSize:\"100\", fontWeight:\"700\"}} href=\"/customer/homepage\">\r\n                        Internet Banking\r\n                    </Navbar.Brand>\r\n                    <Nav className=\"mr-auto\" style={{fontWeight:\"500\"}}>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/customer/transaction\">\r\n                            <SwapHorizIcon/>Transaction\r\n                        </Nav.Link>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/customer/history\">\r\n                            <HistoryIcon/>History\r\n                        </Nav.Link>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/customer/receiver\">\r\n                            <ListAltIcon/>Receiver List\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    <Nav style={{marginLeft:\"50px\"}} className=\"justify-content-end\">\r\n                        <Nav.Link style={ {color:\"#24305E\"}} href=\"/customer/personal\">\r\n                            <i style={{marginRight:\"5px\"}} className=\"fas fa-user\"></i>{localStorage.username}\r\n                        </Nav.Link>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/customer/notification\" onClick={handleClickBell}>\r\n                                <Badge badgeContent={notifications.length} color=\"secondary\"><NotificationsIcon/></Badge> Notification\r\n                        </Nav.Link>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/\" onClick={handleLogout}>\r\n                            <i style={{marginRight:\"5px\"}} className=\"fas fa-sign-out-alt\"></i>Sign out\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                :null}\r\n\r\n                {localStorage.access_token !=='' && localStorage.permission === 'admin'\r\n                ?<Navbar style={{paddingRight:\"0px\", paddingLeft:\"0px\"}} expand=\"lg\">\r\n                <Navbar.Brand style={{color:\"#24305E\", fontSize:\"100\", fontWeight:\"700\"}} href=\"/admin/homepage\">Internet Banking</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\" style={{fontWeight:\"500\"}}>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/admin/history\">\r\n                            <HistoryIcon/>Transaction history\r\n                        </Nav.Link>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/admin/employee-list\">\r\n                            <ListAltIcon/>Employee management\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    <Nav style={{marginLeft:\"50px\"}} className=\"justify-content-end\">\r\n                        <Nav.Link style={ {color:\"#24305E\"}} href=\"/admin/profile\">\r\n                            <i style={{marginRight:\"5px\"}} className=\"fas fa-user\"></i>{localStorage.username}\r\n                        </Nav.Link>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/\" onClick={handleLogout}>\r\n                            <i style={{marginRight:\"5px\"}} className=\"fas fa-sign-out-alt\"></i> Sign out\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                :null}\r\n\r\n                {localStorage.access_token !=='' && localStorage.permission === 'employee'\r\n                ?<Navbar style={{paddingRight:\"0px\", paddingLeft:\"0px\"}} expand=\"lg\">\r\n                <Navbar.Brand style={{color:\"#24305E\", fontSize:\"100\", fontWeight:\"700\"}} href=\"/employee/homepage\">Internet Banking</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\" style={{fontWeight:\"500\"}}>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/employee/create-account\">\r\n                            <HistoryIcon/>Create account\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    <Nav style={{marginLeft:\"50px\"}} className=\"justify-content-end\">\r\n                        <Nav.Link style={ {color:\"#24305E\"}} href=\"/employee/profile\">\r\n                            <i style={{marginRight:\"5px\"}} className=\"fas fa-user\"></i>{localStorage.username}\r\n                        </Nav.Link>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/employee/homepage\" onClick={handleClickBell}>\r\n                            <Badge badgeContent={notifications.length} color=\"secondary\"><NotificationsIcon/></Badge> Notification\r\n                        </Nav.Link>\r\n                        <Nav.Link style={{color:\"#24305E\"}} href=\"/\" onClick={handleLogout}>\r\n                            <i style={{marginRight:\"5px\"}} className=\"fas fa-sign-out-alt\"></i> Sign out\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                :null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\footer\\Footer.jsx",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\filter.js",[],"C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\list-customer.js",["156","157"],"import React, { useEffect, useState } from 'react';\r\nimport {HeadList, ListItem, Pagination} from './list-item';\r\nimport PopUp from './popup';\r\n\r\nconst ListCustomer = (props) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [chooseCustomer, setChooseCustomer] = useState(-1);\r\n    function receiverChoose (ID) {\r\n        setChooseCustomer(ID);\r\n    }\r\n    const Load = () => {\r\n        let lastI = currentPage * 8;\r\n        let firstI = lastI - 8;\r\n        const lst = props.list.slice(firstI, lastI);\r\n        return(\r\n            lst.map((item, key) => {\r\n                return (\r\n                    <ListItem value={item} key={key} sendchoose={receiverChoose}/>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{borderRadius:\"10px\"}} className=\"card mt-2 shadow-lg\" >\r\n            <div style={{height:700}}>\r\n                <HeadList/>\r\n                <hr style={{margin:0}}/>\r\n                {Load()}\r\n            </div>\r\n            <div className=\"d-flex justify-content-end pr-3\">\r\n                <Pagination currentpage={currentPage}/>\r\n            </div>\r\n            {\r\n                chooseCustomer === -1 ? <div/> : <PopUp ID={chooseCustomer} sendchoose={receiverChoose} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListCustomer;","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\list-item.js",["158","159","160","161","162","163"],"import { yellow } from '@material-ui/core/colors';\r\nimport React, { useEffect } from 'react';\r\nimport PopUp from './popup';\r\nimport RechargeModel from './recharge-model'\r\nexport const ListItem = (props) => {\r\n    return (\r\n        <div className=\"card list-item m-2\"  >\r\n            <div className=\"row m-0\">\r\n                <div onClick={() => {props.sendchoose(props.value.ID)}} className= \"col-sm-2\" style={{height:50, padding: \"13px 15px\", borderRight: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\"}}>{props.value.IdentificationCardID}</p>\r\n                </div>\r\n                <div onClick={() => {props.sendchoose(props.value.ID)}} className= \"col-sm-2\" style={{height:50, padding: \"13px 15px\", borderRight: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\"}}>{props.value.FullName}</p>\r\n                </div>\r\n                <div onClick={() => {props.sendchoose(props.value.ID)}} className= \"col-sm-2 \" style={{height:50, padding: \"13px 15px\", borderRight: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\"}}>{props.value.Gender}</p>\r\n                </div>\r\n                <div onClick={() => {props.sendchoose(props.value.ID)}} className= \"col-sm-2\" style={{height:50, padding: \"13px 15px\", borderRight: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\"}}>{props.value.Phone}</p>\r\n                </div>\r\n                <div onClick={() => {props.sendchoose(props.value.ID)}} className= \"col-sm-3\" style={{height:50, padding: \"13px 15px\", borderRight: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\"}}>{props.value.Email}</p>\r\n                </div>\r\n                <div className= \"col-sm-1\" >\r\n                    <RechargeModel Id ={props.value.ID} ></RechargeModel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const HeadList = (props) => {\r\n    return (\r\n        <div className=\"row m-2\">\r\n            <div className= \"col-sm-2\" style={{borderRight: \"1px solid #f0f0f0\"}}>\r\n                <h6 style={{marginLeft:30}}>Identification ID</h6>\r\n            </div>\r\n            <div className= \"col-sm-2\" style={{borderRight: \"1px solid #f0f0f0\"}}>\r\n                <h6 style={{marginLeft:30}}>Full Name</h6>\r\n            </div>\r\n            <div className= \"col-sm-2\" style={{borderRight: \"1px solid #f0f0f0\"}}>\r\n                <h6 style={{marginLeft:30}}>Gender</h6>\r\n            </div>\r\n            <div className= \"col-sm-2\" style={{borderRight: \"1px solid #f0f0f0\"}}>\r\n                <h6 style={{marginLeft:30}}>phone</h6>\r\n            </div>\r\n            <div className= \"col-sm-3\" style={{borderRight: \"1px solid #f0f0f0\"}}>\r\n                <h6 style={{marginLeft:30}}>Email</h6>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Pagination = (props) => {\r\n    useEffect(() => {\r\n        console.log(props);\r\n    }, []);\r\n    return (\r\n        <nav aria-label=\"Page navigation example\">\r\n            <ul className=\"pagination\">\r\n                <li className={`page-item mr-1 ${props.currentpage === 1?\"disabled\":\"\"}`}><a className=\"page-link\" href=\"#\">Previous</a></li>\r\n                <li className=\"page-item mr-1\"><a className=\"page-link\" style={{background: 'blue'}} href=\"#\">{props.currentpage}</a></li>\r\n                <li className={`page-item mr-1 ${props.currentpage === 1?\"disabled\":\"\"}`}><a className=\"page-link\" href=\"#\">Next</a></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\popup.js",["164","165"],"import React, { useState, useEffect } from \"react\";\r\nimport { Tab, Nav } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getCustomerProfileAsync,resetTransaction} from './employeeSlice';\r\n\r\nfunction PopUp(props) {\r\n    const customerProfile = useSelector(state => state.employee.customerProfile);\r\n    const customerSendTransactionHistory = useSelector(state => state.employee.customerSendTransactionHistory);\r\n    const customerReceiverTransactionHistory = useSelector(state => state.employee.customerReceiverTransactionHistory);\r\n    const status = useSelector(state => state.employee.statusHistory);\r\n    const [waiting, setWaiting] = useState(true);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      if(status) {\r\n        setWaiting(false);\r\n      }\r\n      else{\r\n        if(waiting) {\r\n          dispatch(getCustomerProfileAsync(props.ID));\r\n        }\r\n      }\r\n        return()=>{\r\n          dispatch(resetTransaction()); \r\n        }\r\n    }, [status])\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-inner\" style={{overflowY:\"scroll\"}}>\r\n        <Tab.Container defaultActiveKey=\"first\">\r\n          <div className=\"d-flex justify-content-between pt-1 pb-1\"       style={{ borderBottom: \"1px solid black\" }}>\r\n              <MyTab />\r\n              <button className=\"btn btn-outline-danger mr-1\" onClick={()=>{props.sendchoose(-1)}}>close</button>\r\n          </div>\r\n        {waiting ? <div className=\"\" style={{position: 'absolute', top:'45%', left:'50%'}}>\r\n                  <div className=\"spinner-border text-primary \"></div>\r\n                </div> \r\n                :\r\n                        <Tab.Content style={{visibility: waiting === 1 ? 'hidden' : ''}}>\r\n                <SendHistory list={customerSendTransactionHistory} />\r\n                <ReceiverHistory list={customerReceiverTransactionHistory} />\r\n                </Tab.Content>\r\n\r\n                }\r\n        </Tab.Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopUp;\r\n\r\nexport const MyTab = (props) => {\r\n  const [active, setActive] = useState(1);\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      className=\"justify-content-begin pl-3\"\r\n    >\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          className=\"my-nav-link\"\r\n          eventKey=\"first\"\r\n          onClick={() => {\r\n            setActive(1);\r\n          }}\r\n          style={{\r\n            background: \"transparent\",\r\n            color: \"black\",\r\n            borderBottom: active === 1 ? \"2px solid blue\" : \"\",\r\n          }}\r\n        >\r\n          Send History\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          className=\"my-nav-link\"\r\n          eventKey=\"second\"\r\n          onClick={() => {\r\n            setActive(2);\r\n          }}\r\n          style={{\r\n            background: \"transparent\",\r\n            color: \"black\",\r\n            borderBottom: active === 2 ? \"2px solid blue\" : \"\",\r\n          }}\r\n        >\r\n          Receiver History\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport const SendHistory = (props) => {\r\n  return (\r\n    <Tab.Pane className=\"pt-1\" eventKey=\"first\">\r\n      <div className=\"row m-2\">\r\n        <div className=\"col-sm-2\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>To</h6>\r\n        </div>\r\n        <div className=\"col-sm-2\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>Full Name</h6>\r\n        </div>\r\n        <div className=\"col-sm-2\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>Money</h6>\r\n        </div>\r\n        <div className=\"col-sm-2\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>Date Send</h6>\r\n        </div>\r\n        <div className=\"col-sm-3\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>Message</h6>\r\n        </div>\r\n      </div>\r\n      <hr style={{margin: 0, padding: 0}} />\r\n      {\r\n          props.list.map((item, index) => {\r\n            return (\r\n                <TransactionItem value={item} key={index} type={1}/>\r\n            )\r\n          })\r\n      }\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport const ReceiverHistory = (props) => {\r\n  return (\r\n    <Tab.Pane eventKey=\"second\">\r\n      <div className=\"row m-2\">\r\n        <div className=\"col-sm-2\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>From</h6>\r\n        </div>\r\n        <div className=\"col-sm-2\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>Full Name</h6>\r\n        </div>\r\n        <div className=\"col-sm-2\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>Money</h6>\r\n        </div>\r\n        <div className=\"col-sm-2\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>Date Send</h6>\r\n        </div>\r\n        <div className=\"col-sm-3\" style={{ borderLeft: \"1px solid #f0f0f0\" }}>\r\n          <h6 style={{ marginLeft: 30 }}>Message</h6>\r\n        </div>\r\n      </div>\r\n      <hr style={{margin: 0, padding: 0}} />\r\n      {\r\n          props.list.map((item, index) => {\r\n            return (\r\n                <TransactionItem value={item} key={index} type={2} />\r\n            )\r\n          })\r\n      }\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport const TransactionItem = (props) => {\r\n  return ( \r\n    <div className=\"card p-0 m-2\">\r\n        <div className=\"row m-0\">\r\n                <div className= \"col-sm-2\" style={{height:50, padding: \"13px 15px\", borderLeft: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\"}}>{props.type === 1 ? props.value.ReceiverNumber : props.value.SenderNumber}</p>\r\n                </div>\r\n                <div className= \"col-sm-2\" style={{height:50, padding: \"13px 15px\", borderLeft: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\"}}>{props.type === 1 ? props.value.ReceiverName : props.value.SenderName}</p>\r\n                </div>\r\n                <div className= \"col-sm-2\" style={{height:50, padding: \"13px 15px\", borderLeft: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\", color: props.type === 1 ? 'red' : 'green'}}>{props.type === 1 ? \"- $\" +props.value.Money : \"+ $\" +props.value.Money}</p>\r\n                </div>\r\n                <div className= \"col-sm-2 \" style={{height:50, padding: \"13px 15px\", borderLeft: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\"}}>{props.value.DateSend.slice(0,10)}</p>\r\n                </div>\r\n                <div className= \"col-sm-3\" style={{height:50, padding: \"13px 15px\", borderLeft: \"1px solid #f0f0f0\"}}>\r\n                    <p style={{marginLeft: \"30px\"}}>{props.value.Content}</p>\r\n                </div>\r\n            </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\tranp\\Documents\\GitHub\\InternetBankingFrontend\\src\\features\\employee\\recharge-model.js",["166","167","168","169","170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":56,"column":11,"nodeType":"177","messageId":"178","endLine":56,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":35,"column":7,"nodeType":"181","endLine":35,"endColumn":17,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"183","line":31,"column":8,"nodeType":"181","endLine":31,"endColumn":18,"suggestions":"184"},{"ruleId":"179","severity":1,"message":"183","line":38,"column":7,"nodeType":"181","endLine":38,"endColumn":9,"suggestions":"185"},{"ruleId":"179","severity":1,"message":"183","line":36,"column":7,"nodeType":"181","endLine":36,"endColumn":9,"suggestions":"186"},{"ruleId":"179","severity":1,"message":"183","line":24,"column":8,"nodeType":"181","endLine":24,"endColumn":10,"suggestions":"187"},{"ruleId":"179","severity":1,"message":"183","line":35,"column":7,"nodeType":"181","endLine":35,"endColumn":9,"suggestions":"188"},{"ruleId":"179","severity":1,"message":"183","line":39,"column":8,"nodeType":"181","endLine":39,"endColumn":10,"suggestions":"189"},{"ruleId":"179","severity":1,"message":"183","line":32,"column":8,"nodeType":"181","endLine":32,"endColumn":10,"suggestions":"190"},{"ruleId":"179","severity":1,"message":"183","line":20,"column":7,"nodeType":"181","endLine":20,"endColumn":9,"suggestions":"191"},{"ruleId":"179","severity":1,"message":"183","line":19,"column":7,"nodeType":"181","endLine":19,"endColumn":9,"suggestions":"192"},{"ruleId":"179","severity":1,"message":"183","line":39,"column":7,"nodeType":"181","endLine":39,"endColumn":9,"suggestions":"193"},{"ruleId":"179","severity":1,"message":"183","line":22,"column":8,"nodeType":"181","endLine":22,"endColumn":18,"suggestions":"194"},{"ruleId":"175","severity":1,"message":"195","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"196","line":6,"column":25,"nodeType":"177","messageId":"178","endLine":6,"endColumn":39},{"ruleId":"175","severity":1,"message":"197","line":1,"column":10,"nodeType":"177","messageId":"178","endLine":1,"endColumn":16},{"ruleId":"175","severity":1,"message":"198","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":13},{"ruleId":"179","severity":1,"message":"199","line":57,"column":8,"nodeType":"181","endLine":57,"endColumn":10,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":61,"column":91,"nodeType":"203","endLine":61,"endColumn":125},{"ruleId":"201","severity":1,"message":"202","line":62,"column":48,"nodeType":"203","endLine":62,"endColumn":111},{"ruleId":"201","severity":1,"message":"202","line":63,"column":91,"nodeType":"203","endLine":63,"endColumn":125},{"ruleId":"175","severity":1,"message":"204","line":7,"column":11,"nodeType":"177","messageId":"178","endLine":7,"endColumn":26},{"ruleId":"179","severity":1,"message":"205","line":25,"column":8,"nodeType":"181","endLine":25,"endColumn":16,"suggestions":"206"},{"ruleId":"175","severity":1,"message":"207","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":16},{"ruleId":"175","severity":1,"message":"208","line":3,"column":23,"nodeType":"177","messageId":"178","endLine":3,"endColumn":34},{"ruleId":"175","severity":1,"message":"209","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":23},{"ruleId":"175","severity":1,"message":"210","line":12,"column":11,"nodeType":"177","messageId":"178","endLine":12,"endColumn":19},{"ruleId":"211","severity":1,"message":"212","line":44,"column":59,"nodeType":"213","messageId":"214","endLine":44,"endColumn":61},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["217"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["218"],["219"],["220"],["221"],["222"],["223"],["224"],["225"],["226"],["227"],["228"],"'useEffect' is defined but never used.","'setCurrentPage' is assigned a value but never used.","'yellow' is defined but never used.","'PopUp' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["229"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'customerProfile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.ID', and 'waiting'. Either include them or remove the dependency array.",["230"],"'ReactDOM' is defined but never used.","'useSelector' is defined but never used.","'updateBalance' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},{"desc":"235","fix":"238"},{"desc":"235","fix":"239"},{"desc":"235","fix":"240"},{"desc":"235","fix":"241"},{"desc":"235","fix":"242"},{"desc":"235","fix":"243"},{"desc":"235","fix":"244"},{"desc":"233","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [history, loggedIn]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, loggedIn]",{"range":"252","text":"253"},"Update the dependencies array to be: [dispatch]",{"range":"254","text":"255"},{"range":"256","text":"255"},{"range":"257","text":"255"},{"range":"258","text":"255"},{"range":"259","text":"255"},{"range":"260","text":"255"},{"range":"261","text":"255"},{"range":"262","text":"255"},{"range":"263","text":"255"},{"range":"264","text":"253"},"Update the dependencies array to be: [props]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, props.ID, status, waiting]",{"range":"267","text":"268"},[1181,1191],"[history, loggedIn]",[1195,1205],"[dispatch, loggedIn]",[1343,1345],"[dispatch]",[1326,1328],[727,729],[1308,1310],[1390,1392],[1201,1203],[663,665],[667,669],[1399,1401],[910,920],[2921,2923],"[props]",[1007,1015],"[dispatch, props.ID, status, waiting]"]